#version 450 core

layout (location = 0) in vec3 vertex_position;
layout (location = 1) in vec3 vertex_normal;
layout (location = 2) in vec2 uv;
layout (location = 3) in vec4 vertex_color;

uniform mat4 model_view_matrix;
uniform mat4 projection_matrix;
uniform mat3 normal_matrix;
uniform mat4 shadow_matrix;

out vec4 shadow_coordinate;
out vec3 normal;
out vec4 viewspace_position;

void main() {
    viewspace_position = model_view_matrix * vec4(vertex_position, 1.0);
    normal = normalize(normal_matrix * vertex_normal);
    gl_Position = projection_matrix * viewspace_position;
    shadow_coordinate = shadow_matrix * vec4(vertex_position, 1.0);
}